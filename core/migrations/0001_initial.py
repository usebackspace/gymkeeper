# Generated by Django 5.1.1 on 2025-06-13 15:30

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Name must start with a letter and contain only letters and spaces.', regex='^[A-Za-z][A-Za-z\\s]*$')])),
                ('last_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Name must start with a letter and contain only letters and spaces.', regex='^[A-Za-z][A-Za-z\\s]*$')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be exactly 10 digits.', regex='^\\d{10}$')])),
                ('hire_date', models.DateField(auto_now_add=True)),
                ('position', models.CharField(max_length=100)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MaxValueValidator(100000, message='Salary cannot exceed ₹100,000.')])),
                ('photo', models.ImageField(blank=True, null=True, upload_to='staff_photos/')),
                ('aadhar_document', models.FileField(blank=True, null=True, upload_to='documents/aadhar/')),
                ('pan_document', models.FileField(blank=True, null=True, upload_to='documents/pan/')),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Name must start with a letter and contain only letters and spaces.', regex='^[A-Za-z][A-Za-z\\s]*$')])),
                ('last_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Name must start with a letter and contain only letters and spaces.', regex='^[A-Za-z][A-Za-z\\s]*$')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be exactly 10 digits.', regex='^\\d{10}$')])),
                ('hire_date', models.DateField(auto_now_add=True)),
                ('specialty', models.CharField(max_length=100)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MaxValueValidator(100000, message='Salary cannot exceed ₹100,000.')])),
                ('photo', models.ImageField(blank=True, null=True, upload_to='trainer_photos/')),
                ('aadhar_document', models.FileField(blank=True, null=True, upload_to='documents/aadhar/')),
                ('pan_document', models.FileField(blank=True, null=True, upload_to='documents/pan/')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='First name must start with a letter and contain only letters and spaces.', regex='^[A-Za-z][A-Za-z\\s]*$')])),
                ('last_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Last name must start with a letter and contain only letters and spaces.', regex='^[A-Za-z][A-Za-z\\s]*$')])),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be exactly 10 digits.', regex='^\\d{10}$')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('join_date', models.DateField(auto_now_add=True)),
                ('package_name', models.CharField(choices=[('COMPLETE_PACKAGE', 'Complete Package'), ('GYM', 'Gym'), ('GYM_CARDIO', 'Gym + Cardio'), ('CARDIO', 'Cardio')], max_length=100)),
                ('duration_months', models.IntegerField(choices=[(1, '1 Months'), (3, '3 Months'), (6, '6 Months'), (9, '9 Months'), (12, '1 Year')])),
                ('admission_fees', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MaxValueValidator(10000, message='Admission fees cannot exceed ₹10,000.')])),
                ('total_fees', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MaxValueValidator(100000, message='Total fees cannot exceed ₹100,000.')])),
                ('paid_fees', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('PAID', 'Paid'), ('PENDING', 'Pending')], default='PENDING', max_length=20)),
                ('aadhar_document', models.FileField(blank=True, null=True, upload_to='documents/aadhar/')),
                ('pan_document', models.FileField(blank=True, null=True, upload_to='documents/pan/')),
                ('photo', models.ImageField(blank=True, default='photos/default_user.png', null=True, upload_to='photos/')),
                ('active_member', models.BooleanField(default=True)),
                ('subscription_end_date', models.DateField(blank=True, null=True)),
                ('trainer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.trainer')),
            ],
        ),
    ]
